@using Attributes.Panel
@using BlazorDynamicComponents.Validation

@if (InputType != InputType.None)
{
    @switch (InputType)
    {
        case InputType.Date:
            <input type="date" class="form-control" disabled="@Readonly" value="@GetValue()" @onchange="@((e) => SetValue(e.Value))" />
            break;

        case InputType.DateTime:
            <input type="datetime" class="form-control" disabled="@Readonly" value="@GetValue()" @onchange="@((e) => SetValue(e.Value))" />
            break;

        case InputType.Text:
            <input type="text" class="form-control" disabled="@Readonly" value="@GetValue()" @onchange="@((e) => SetValue(e.Value))" />
            break;

        case InputType.TextArea:
            <textarea class="form-control" disabled="@Readonly" value="@GetValue()" @onchange="@((e) => SetValue(e.Value))" />
            break;

        case InputType.Number:
            <input type="number" class="form-control" disabled="@Readonly" value="@GetValue()" @onchange="@((e) => SetValue(e.Value))" />
            break;

        case InputType.Select:
            break;
    }

    <DynamicValidationMessage Context="Context" Property="Property" />
}
